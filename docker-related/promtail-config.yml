# promtail-config.yml 파일 수정 내용

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: nginx-file-logs # job_name 변경 (선택 사항)

    # Docker 데몬에서 로그를 직접 가져오는 설정 (이 부분 삭제하거나 주석 처리)
    # docker_sd_configs:
    #   - host: unix:///var/run/docker.sock

    # 파일 기반 로그 수집 설정 추가
    static_configs:
      # 리스트 형태로 수집할 파일 경로 지정
      - targets:
          - localhost # 호스트는 localhost 또는 127.0.0.1 로 설정 (컨테이너 자신의 파일 시스템)
        labels:
          job: nginx-access-logs # Loki에서 사용할 job 레이블
          __path__: /var/log/nginx/*log # Promtail 컨테이너 내부에서 로그 파일 경로 지정 (와일드카드 사용 가능)

    # 레이블 재설정 (필요에 따라 수정)
    # 파일 기반 수집에서는 __meta_docker_* 레이블을 직접 사용할 수 없습니다.
    # 필요하다면 __path__ 등의 다른 메타 레이블을 기반으로 재설정하거나,
    # pipeline_stages에서 추출한 정보로 레이블을 추가해야 합니다.
    # 여기서는 Grok 파싱 결과를 레이블로 사용하는 방식을 유지합니다.
    relabel_configs:
      # __meta_docker_* 관련 relabeling은 이 방식에서 작동하지 않습니다.
      # 필요하다면 __path__ 등을 사용하여 relabeling 규칙을 재작성해야 합니다.
      # 예: 파일 경로에서 컨테이너 이름을 추출하는 relabel (필요하다면)
      # - source_labels: ['__path__']
      #   regex: '/var/log/nginx/(.*)/.*' # 예시: /var/log/nginx/컨테이너명/access.log 와 같은 구조일 경우
      #   target_label: container_name

      # job 레이블을 static_configs에서 정의한 것으로 사용
      - source_labels: ['__address__']
        regex: '.*'
        target_label: __host__
        replacement: '{{ .Target }}' # target 값 (localhost)으로 host 레이블 설정

    # # 로그 라인을 파싱하고 레이블을 추출하는 파이프라인 (이 부분은 동일하게 유지)
    # # Grok 스테이지가 이 방식에서는 정상 작동하기를 기대합니다.
    # pipeline_stages:
    #   - grok:
    #       pattern: '%{IPORHOST:remote_addr} - %{WORD:remote_user} \[%{HTTPDATE:time_local}\] \"(?:%{WORD:method})? %{NOTSPACE:request}(?: HTTP/%{NUMBER:http_version})?\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{DATA:http_referer}\" \"%{DATA:http_user_agent}\" \"%{DATA:http_x_forwarded_for}\" \"%{DATA:ab_version}\"'
    #   # Grok에서 추출한 필드를 레이블로 추가
    #   - labels:
    #       status:
    #       ab_version:
    #       # Grok 패턴에서 추출한 다른 필드도 필요하면 여기에 추가 (예: method, request 등)
    #       # method:
    #       # request: